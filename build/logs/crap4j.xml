<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project/>
  <timestamp>2015-06-29 20:49:04</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>99</methodCount>
    <crapMethodCount>0</crapMethodCount>
    <crapLoad>0</crapLoad>
    <totalCrap>250.05</totalCrap>
    <crapMethodPercent>0</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package>Display\StudyArea</package>
      <className>PainRatingMaker</className>
      <methodName>make</methodName>
      <methodSignature>make()</methodSignature>
      <fullMethod>make()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Display\StudyArea</package>
      <className>PrayerTaskMaker</className>
      <methodName>chooseTemplate</methodName>
      <methodSignature>chooseTemplate($state)</methodSignature>
      <fullMethod>chooseTemplate($state)</fullMethod>
      <crap>7.12</crap>
      <complexity>7</complexity>
      <coverage>86.36</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Display\StudyArea</package>
      <className>PrayerTaskMaker</className>
      <methodName>make</methodName>
      <methodSignature>make()</methodSignature>
      <fullMethod>make()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Display\StudyArea</package>
      <className>StudyAreaMaker</className>
      <methodName>setContentMaker</methodName>
      <methodSignature>setContentMaker(\Display\StudyArea\IContentMaker $content_maker)</methodSignature>
      <fullMethod>setContentMaker(\Display\StudyArea\IContentMaker $content_maker)</fullMethod>
      <crap>1.3</crap>
      <complexity>1</complexity>
      <coverage>33.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Display\StudyArea</package>
      <className>StudyAreaMaker</className>
      <methodName>setAreaDivId</methodName>
      <methodSignature>setAreaDivId($div_id)</methodSignature>
      <fullMethod>setAreaDivId($div_id)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Display\StudyArea</package>
      <className>StudyAreaMaker</className>
      <methodName>make</methodName>
      <methodSignature>make()</methodSignature>
      <fullMethod>make()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Display\StudyArea</package>
      <className>StudyAreaMaker</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>PainAssess\Display</package>
      <className>PainAssessmentGetter</className>
      <methodName>setTrial</methodName>
      <methodSignature>setTrial($trial)</methodSignature>
      <fullMethod>setTrial($trial)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>PainAssess\Display</package>
      <className>PainAssessmentGetter</className>
      <methodName>setDao</methodName>
      <methodSignature>setDao(\PainAssess\dao\IPainDao $dao)</methodSignature>
      <fullMethod>setDao(\PainAssess\dao\IPainDao $dao)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>PainAssess\Display</package>
      <className>PainAssessmentGetter</className>
      <methodName>getContent</methodName>
      <methodSignature>getContent()</methodSignature>
      <fullMethod>getContent()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>PainAssess\Display</package>
      <className>PainAssessmentGetter</className>
      <methodName>make</methodName>
      <methodSignature>make()</methodSignature>
      <fullMethod>make()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Prayer\Assign</package>
      <className>Assignment</className>
      <methodName>setAgent</methodName>
      <methodSignature>setAgent(\User $user)</methodSignature>
      <fullMethod>setAgent(\User $user)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Prayer\Assign</package>
      <className>Assignment</className>
      <methodName>setPatient</methodName>
      <methodSignature>setPatient(\User $user)</methodSignature>
      <fullMethod>setPatient(\User $user)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Prayer\Assign</package>
      <className>Assignment</className>
      <methodName>load</methodName>
      <methodSignature>load(\User $agent, \User $patient, $date)</methodSignature>
      <fullMethod>load(\User $agent, \User $patient, $date)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Prayer\Assign</package>
      <className>CreateAssignment</className>
      <methodName>create</methodName>
      <methodSignature>create(\User $agent, \User $patient, $date)</methodSignature>
      <fullMethod>create(\User $agent, \User $patient, $date)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>RequestHandling</package>
      <className>Request</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>RequestHandling</package>
      <className>Request</className>
      <methodName>load</methodName>
      <methodSignature>load()</methodSignature>
      <fullMethod>load()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>RequestHandling</package>
      <className>Request</className>
      <methodName>unset_incoming</methodName>
      <methodSignature>unset_incoming()</methodSignature>
      <fullMethod>unset_incoming()</fullMethod>
      <crap>4.13</crap>
      <complexity>4</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>RequestHandling</package>
      <className>Request</className>
      <methodName>load_get</methodName>
      <methodSignature>load_get()</methodSignature>
      <fullMethod>load_get()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>RequestHandling</package>
      <className>Request</className>
      <methodName>load_post</methodName>
      <methodSignature>load_post()</methodSignature>
      <fullMethod>load_post()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>RequestHandling</package>
      <className>Request</className>
      <methodName>combine</methodName>
      <methodSignature>combine()</methodSignature>
      <fullMethod>combine()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>RequestHandling</package>
      <className>Request</className>
      <methodName>get_cleaned_value</methodName>
      <methodSignature>get_cleaned_value($fieldname)</methodSignature>
      <fullMethod>get_cleaned_value($fieldname)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>RequestHandling</package>
      <className>Request</className>
      <methodName>task</methodName>
      <methodSignature>task()</methodSignature>
      <fullMethod>task()</fullMethod>
      <crap>3.07</crap>
      <complexity>3</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>RequestHandling</package>
      <className>Request</className>
      <methodName>page_name</methodName>
      <methodSignature>page_name()</methodSignature>
      <fullMethod>page_name()</fullMethod>
      <crap>2.15</crap>
      <complexity>2</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Scheduling\States</package>
      <className>StateManager</className>
      <methodName>loadState</methodName>
      <methodSignature>loadState()</methodSignature>
      <fullMethod>loadState()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>CleanerFactory</className>
      <methodName>validate</methodName>
      <methodSignature>validate($to_validate, $type)</methodSignature>
      <fullMethod>validate($to_validate, $type)</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>CleanerFactory</className>
      <methodName>sanitize</methodName>
      <methodSignature>sanitize($to_clean, $type)</methodSignature>
      <fullMethod>sanitize($to_clean, $type)</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>CleanerFactory</className>
      <methodName>make</methodName>
      <methodSignature>make($type)</methodSignature>
      <fullMethod>make($type)</fullMethod>
      <crap>6.14</crap>
      <complexity>6</complexity>
      <coverage>84.21</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>EmailCleaner</className>
      <methodName>sanitize</methodName>
      <methodSignature>sanitize($to_clean)</methodSignature>
      <fullMethod>sanitize($to_clean)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>EmailCleaner</className>
      <methodName>validate</methodName>
      <methodSignature>validate($to_validate)</methodSignature>
      <fullMethod>validate($to_validate)</fullMethod>
      <crap>2.15</crap>
      <complexity>2</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>EmailCleaner</className>
      <methodName>set_max_length</methodName>
      <methodSignature>set_max_length($custom_max)</methodSignature>
      <fullMethod>set_max_length($custom_max)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>FloatCleaner</className>
      <methodName>sanitize</methodName>
      <methodSignature>sanitize($to_clean)</methodSignature>
      <fullMethod>sanitize($to_clean)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>FloatCleaner</className>
      <methodName>validate</methodName>
      <methodSignature>validate($to_validate)</methodSignature>
      <fullMethod>validate($to_validate)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>FloatCleaner</className>
      <methodName>set_max_length</methodName>
      <methodSignature>set_max_length($custom_max)</methodSignature>
      <fullMethod>set_max_length($custom_max)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>IntegerCleaner</className>
      <methodName>sanitize</methodName>
      <methodSignature>sanitize($to_clean)</methodSignature>
      <fullMethod>sanitize($to_clean)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>IntegerCleaner</className>
      <methodName>validate</methodName>
      <methodSignature>validate($to_validate)</methodSignature>
      <fullMethod>validate($to_validate)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>IntegerCleaner</className>
      <methodName>set_max_length</methodName>
      <methodSignature>set_max_length($custom_max)</methodSignature>
      <fullMethod>set_max_length($custom_max)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>IntegerCleaner</className>
      <methodName>trim</methodName>
      <methodSignature>trim()</methodSignature>
      <fullMethod>trim()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>TextCleaner</className>
      <methodName>sanitize</methodName>
      <methodSignature>sanitize($to_clean)</methodSignature>
      <fullMethod>sanitize($to_clean)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>TextCleaner</className>
      <methodName>validate</methodName>
      <methodSignature>validate($to_validate)</methodSignature>
      <fullMethod>validate($to_validate)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\cleaners</package>
      <className>TextCleaner</className>
      <methodName>set_max_length</methodName>
      <methodSignature>set_max_length($custom_max)</methodSignature>
      <fullMethod>set_max_length($custom_max)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>INonceSessionHandlerMock</className>
      <methodName>set_response</methodName>
      <methodSignature>set_response($response)</methodSignature>
      <fullMethod>set_response($response)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>INonceSessionHandlerMock</className>
      <methodName>get_nonce</methodName>
      <methodSignature>get_nonce($page_name)</methodSignature>
      <fullMethod>get_nonce($page_name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>INonceSessionHandlerMock</className>
      <methodName>remove_page_nonce</methodName>
      <methodSignature>remove_page_nonce($page_name)</methodSignature>
      <fullMethod>remove_page_nonce($page_name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>INonceSessionHandlerMock</className>
      <methodName>store_nonce</methodName>
      <methodSignature>store_nonce($page_name, Nonce $nonce)</methodSignature>
      <fullMethod>store_nonce($page_name, Nonce $nonce)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>Nonce</className>
      <methodName>__get</methodName>
      <methodSignature>__get($name)</methodSignature>
      <fullMethod>__get($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>Nonce</className>
      <methodName>__set</methodName>
      <methodSignature>__set($name, $value)</methodSignature>
      <fullMethod>__set($name, $value)</fullMethod>
      <crap>7.27</crap>
      <complexity>7</complexity>
      <coverage>82.35</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>NonceMaker</className>
      <methodName>set_logger</methodName>
      <methodSignature>set_logger(\SecurityClasses\logging\ISecurityLoggers $logger)</methodSignature>
      <fullMethod>set_logger(\SecurityClasses\logging\ISecurityLoggers $logger)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>NonceMaker</className>
      <methodName>set_session_handler</methodName>
      <methodSignature>set_session_handler(\Security\nonces\INonceSessionHandler $handler)</methodSignature>
      <fullMethod>set_session_handler(\Security\nonces\INonceSessionHandler $handler)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>NonceMaker</className>
      <methodName>createNonceToken</methodName>
      <methodSignature>createNonceToken()</methodSignature>
      <fullMethod>createNonceToken()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>NonceMaker</className>
      <methodName>createNonce</methodName>
      <methodSignature>createNonce($page_name)</methodSignature>
      <fullMethod>createNonce($page_name)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>NonceMaker</className>
      <methodName>make_form_field</methodName>
      <methodSignature>make_form_field(\Security\nonces\Nonce $nonce, $page_name)</methodSignature>
      <fullMethod>make_form_field(\Security\nonces\Nonce $nonce, $page_name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>NonceValidator</className>
      <methodName>set_logger</methodName>
      <methodSignature>set_logger(\Security\logging\ISecurityLoggers $logger)</methodSignature>
      <fullMethod>set_logger(\Security\logging\ISecurityLoggers $logger)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>NonceValidator</className>
      <methodName>set_session_handler</methodName>
      <methodSignature>set_session_handler(\Security\nonces\INonceSessionHandler $handler)</methodSignature>
      <fullMethod>set_session_handler(\Security\nonces\INonceSessionHandler $handler)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>NonceValidator</className>
      <methodName>check_nonce</methodName>
      <methodSignature>check_nonce($page_name, \Security\nonces\Nonce $nonce)</methodSignature>
      <fullMethod>check_nonce($page_name, \Security\nonces\Nonce $nonce)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Security\nonces</package>
      <className>NonceValidator</className>
      <methodName>validate</methodName>
      <methodSignature>validate($page_name, $token)</methodSignature>
      <fullMethod>validate($page_name, $token)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>setAssignmentHash</methodName>
      <methodSignature>setAssignmentHash($assignmentHash)</methodSignature>
      <fullMethod>setAssignmentHash($assignmentHash)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>postRecordTask</methodName>
      <methodSignature>postRecordTask()</methodSignature>
      <fullMethod>postRecordTask()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>getId</methodName>
      <methodSignature>getId()</methodSignature>
      <fullMethod>getId()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>setId</methodName>
      <methodSignature>setId($id)</methodSignature>
      <fullMethod>setId($id)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>getStartDate</methodName>
      <methodSignature>getStartDate()</methodSignature>
      <fullMethod>getStartDate()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>setStartDate</methodName>
      <methodSignature>setStartDate($startDate)</methodSignature>
      <fullMethod>setStartDate($startDate)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>getEndDate</methodName>
      <methodSignature>getEndDate()</methodSignature>
      <fullMethod>getEndDate()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>setEndDate</methodName>
      <methodSignature>setEndDate($endDate)</methodSignature>
      <fullMethod>setEndDate($endDate)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>getAgent</methodName>
      <methodSignature>getAgent()</methodSignature>
      <fullMethod>getAgent()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>setAgent</methodName>
      <methodSignature>setAgent(\User $agent)</methodSignature>
      <fullMethod>setAgent(\User $agent)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>getPatient</methodName>
      <methodSignature>getPatient()</methodSignature>
      <fullMethod>getPatient()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>setPatient</methodName>
      <methodSignature>setPatient(\User $patient)</methodSignature>
      <fullMethod>setPatient(\User $patient)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>getAction</methodName>
      <methodSignature>getAction()</methodSignature>
      <fullMethod>getAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks</package>
      <className>Assignment</className>
      <methodName>setAction</methodName>
      <methodSignature>setAction(\Tasks\Actions\Action $action)</methodSignature>
      <fullMethod>setAction(\Tasks\Actions\Action $action)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments</package>
      <className>PrayerAssignment</className>
      <methodName>postRecordTask</methodName>
      <methodSignature>postRecordTask()</methodSignature>
      <fullMethod>postRecordTask()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments</package>
      <className>PrayerAssignment</className>
      <methodName>createAssignment</methodName>
      <methodSignature>createAssignment($agent, $patient, $date)</methodSignature>
      <fullMethod>createAssignment($agent, $patient, $date)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments</package>
      <className>PrayerAssignment</className>
      <methodName>checkPatientUnassigned</methodName>
      <methodSignature>checkPatientUnassigned($patient)</methodSignature>
      <fullMethod>checkPatientUnassigned($patient)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments</package>
      <className>PrayerAssignment</className>
      <methodName>makeHash</methodName>
      <methodSignature>makeHash()</methodSignature>
      <fullMethod>makeHash()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\dao</package>
      <className>PartnershipDao</className>
      <methodName>loadAllForAgent</methodName>
      <methodSignature>loadAllForAgent(\User $agent)</methodSignature>
      <fullMethod>loadAllForAgent(\User $agent)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\dao</package>
      <className>PartnershipDao</className>
      <methodName>loadByAgentAndDate</methodName>
      <methodSignature>loadByAgentAndDate(\User $agent, $date)</methodSignature>
      <fullMethod>loadByAgentAndDate(\User $agent, $date)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\dao</package>
      <className>PartnershipDao</className>
      <methodName>loadByAgentAndPatient</methodName>
      <methodSignature>loadByAgentAndPatient(\User $agent, \User $patient, $date)</methodSignature>
      <fullMethod>loadByAgentAndPatient(\User $agent, \User $patient, $date)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\dao</package>
      <className>PartnershipDao</className>
      <methodName>loadByHash</methodName>
      <methodSignature>loadByHash($assignmentHash)</methodSignature>
      <fullMethod>loadByHash($assignmentHash)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\dao</package>
      <className>PartnershipDao</className>
      <methodName>createAssignment</methodName>
      <methodSignature>createAssignment(\User $agent, \User $patient, $date, $hash)</methodSignature>
      <fullMethod>createAssignment(\User $agent, \User $patient, $date, $hash)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\dao</package>
      <className>PartnershipDao</className>
      <methodName>checkIfPatient</methodName>
      <methodSignature>checkIfPatient(\User $user, $date)</methodSignature>
      <fullMethod>checkIfPatient(\User $user, $date)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\dao</package>
      <className>PartnershipDao</className>
      <methodName>checkIfAgent</methodName>
      <methodSignature>checkIfAgent(\User $user, $date)</methodSignature>
      <fullMethod>checkIfAgent(\User $user, $date)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\dao</package>
      <className>PartnershipDao</className>
      <methodName>markComplete</methodName>
      <methodSignature>markComplete(\User $agent, \User $patient, $date)</methodSignature>
      <fullMethod>markComplete(\User $agent, \User $patient, $date)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\dao</package>
      <className>PartnershipDao</className>
      <methodName>markCompleteByHash</methodName>
      <methodSignature>markCompleteByHash($assignmentHash)</methodSignature>
      <fullMethod>markCompleteByHash($assignmentHash)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\errors</package>
      <className>AlreadyAssignedException</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($message = null, $code = 0, \Exception $previous = null)</methodSignature>
      <fullMethod>__construct($message = null, $code = 0, \Exception $previous = null)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipLoader</className>
      <methodName>setDao</methodName>
      <methodSignature>setDao(\Tasks\Assignments\dao\IPartnershipDao $dao)</methodSignature>
      <fullMethod>setDao(\Tasks\Assignments\dao\IPartnershipDao $dao)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipLoader</className>
      <methodName>load</methodName>
      <methodSignature>load($identifier, $date = null)</methodSignature>
      <fullMethod>load($identifier, $date = null)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipLoader</className>
      <methodName>doLoad</methodName>
      <methodSignature>doLoad($identifier, $date = null)</methodSignature>
      <fullMethod>doLoad($identifier, $date = null)</fullMethod>
      <crap>4.2</crap>
      <complexity>4</complexity>
      <coverage>76.92</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipLoader</className>
      <methodName>chooseMethod</methodName>
      <methodSignature>chooseMethod($identifier)</methodSignature>
      <fullMethod>chooseMethod($identifier)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipLoader</className>
      <methodName>checkIfUser</methodName>
      <methodSignature>checkIfUser($identifier)</methodSignature>
      <fullMethod>checkIfUser($identifier)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipLoader</className>
      <methodName>checkIfHash</methodName>
      <methodSignature>checkIfHash($identifier)</methodSignature>
      <fullMethod>checkIfHash($identifier)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipMaker</className>
      <methodName>setDao</methodName>
      <methodSignature>setDao($dao)</methodSignature>
      <fullMethod>setDao($dao)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipMaker</className>
      <methodName>setHashMaker</methodName>
      <methodSignature>setHashMaker($hashMaker)</methodSignature>
      <fullMethod>setHashMaker($hashMaker)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipMaker</className>
      <methodName>make</methodName>
      <methodSignature>make($agent, $patient, $date)</methodSignature>
      <fullMethod>make($agent, $patient, $date)</fullMethod>
      <crap>3.33</crap>
      <complexity>3</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>Tasks\Assignments\service</package>
      <className>PartnershipMaker</className>
      <methodName>checkUnassigned</methodName>
      <methodSignature>checkUnassigned($agent, $patient, $date)</methodSignature>
      <fullMethod>checkUnassigned($agent, $patient, $date)</fullMethod>
      <crap>3.07</crap>
      <complexity>3</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>TemplateClasses</package>
      <className>Controller</className>
      <methodName>setLocations</methodName>
      <methodSignature>setLocations()</methodSignature>
      <fullMethod>setLocations()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>TemplateClasses</package>
      <className>Controller</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>90</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>TemplateClasses</package>
      <className>Controller</className>
      <methodName>add_variables</methodName>
      <methodSignature>add_variables(array $to_add)</methodSignature>
      <fullMethod>add_variables(array $to_add)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>TemplateClasses</package>
      <className>Controller</className>
      <methodName>load</methodName>
      <methodSignature>load($template_name)</methodSignature>
      <fullMethod>load($template_name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package>TemplateClasses</package>
      <className>Controller</className>
      <methodName>render</methodName>
      <methodSignature>render($template_name)</methodSignature>
      <fullMethod>render($template_name)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
