<?php

namespace Security\cleaners;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-27 at 17:01:28.
 */
class CleanerFactoryTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var CleanerFactory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new CleanerFactory;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers \Security\cleaners\CleanerFactory::validate
     */
    public function testValidate() {
        $this->assertTrue(4 === $this->object->validate('4', 'integer'));
        $this->assertFalse($this->object->validate(4.4, 'integer'));
        $this->assertTrue(4.4 === $this->object->validate('4.4', 'float'));
    }

    /**
     * @covers \Security\cleaners\CleanerFactory::sanitize
     */
    public function testSanitize() {
        $this->assertEquals(4, $this->object->sanitize(4, 'integer'));
        $this->assertEquals( 4, $this->object->sanitize('4', 'integer'));
//        $this->assertEquals(4.4, $this->object->sanitize('4.4', 'float'), '', 0.001);
//        $this->assertEquals(4.4, $this->object->sanitize(4.4, 'float'), '', 0.001);
    }

    /**
     * @covers \Security\cleaners\CleanerFactory::make
     */
    public function testMake() {
        $this->assertInstanceOf('\Security\cleaners\EmailCleaner', $this->object->make('email'));
        $this->assertInstanceOf('\Security\cleaners\FloatCleaner', $this->object->make('float'));
        $this->assertInstanceOf('\Security\cleaners\IntegerCleaner', $this->object->make('integer'));
        $this->assertInstanceOf('\Security\cleaners\TextCleaner', $this->object->make('string'));
        $this->assertInstanceOf('\Security\cleaners\TextCleaner', $this->object->make('text'));
    }

}
