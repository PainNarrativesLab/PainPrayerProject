<?php

namespace Security\nonces;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-02-06 at 15:14:22.
 */
class NonceValidatorTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var NonceValidator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new NonceValidator();
        $this->nonce = new Nonce();
        $this->session_handler = new INonceSessionHandlerMock();
        $this->logger = new \Security\logging\ISecurityLoggersMock();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Security\nonces\NonceValidator::set_logger
     */
    public function testSet_logger()
    {
        $this->object->set_logger($this->logger);
        $this->assertAttributeInstanceOf('\Security\logging\ISecurityLoggers', 'logger', $this->object);
    }

    /**
     * @covers Security\nonces\NonceValidator::set_session_handler
     */
    public function testSet_session_handler()
    {
        $this->object->set_session_handler($this->session_handler);
        $this->assertAttributeInstanceOf('\Security\nonces\INonceSessionHandler', 'session_handler', $this->object);
    }

    /**
     * @covers Security\nonces\NonceValidator::validate
     */
    public function testValidate()
    {
        $testval = "jsadjflsdjf";
        $this->nonce->token = $testval;
        $this->nonce->time = time();
        $this->session_handler->set_response($this->nonce);
        $this->object->set_session_handler($this->session_handler);
        $this->assertTrue($this->object->validate('testpage', $testval));
    }

    /**
     * @covers Security\nonces\NonceValidator::validate
     */
    public function testValidateExceptsOnTooOldTimestamp()
    {
        $testval = "jsadjflsdjf";
        $this->nonce->token = $testval;
        $this->nonce->time = time() - 50000;
        $this->object->set_logger($this->logger);
        $this->session_handler->set_response($this->nonce);
        $this->object->set_session_handler($this->session_handler);
        $this->object->validate('testpage', $testval);
        $this->assertEquals("Nonce failed validation", $this->logger->logged);
    }

    /**
     * @covers Security\nonces\NonceValidator::validate
     * @expectedException \Exception
     */
    public function testValidateExceptsOnInvalidPageName()
    {
        $testval = "jsadjflsdjf";
        $this->nonce->token = $testval;
        $this->nonce->time = time() - 500;
        $this->object->set_logger($this->logger);
        $this->session_handler->set_response($this->nonce);
        $this->object->set_session_handler($this->session_handler);
        $this->object->validate('< ! >testpage', $testval);
    }

}
